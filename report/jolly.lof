\contentsline {figure}{\numberline {1}{\ignorespaces Entity-relationship diagram of \textit {QuestionnaireDB}. The entities are in blue rectangles, their attributes in orange ellipses, and their relationships in green diamonds. The grey clouds indicate that Opal's database will link up there. A simple line represents a many-to-many relationship; a bolded line represents a participation constraint (the relationship must exist); an arrow represents a key constraint (at most one).\relax }}{4}
\contentsline {figure}{\numberline {2}{\ignorespaces The app's model-view-controller (MVC) architecture. The views, models, and controllers communicate via 2-way data binding, and the controller communicates with the database via PHP scripts.\relax }}{5}
\contentsline {figure}{\numberline {3}{\ignorespaces Screenshot of the home menu of the app.\relax }}{6}
\contentsline {figure}{\numberline {4}{\ignorespaces Screenshot of the questionnaire-creation page. This first look shows the three ways physicians can add questions to questionnaires: browsing through libraries, searching by tags, and creating their own questions.\relax }}{7}
\contentsline {figure}{\numberline {5}{\ignorespaces Screenshot of the library-browsing functionality when creating questionnaires. The right-hand side shows a preview of the questionnaire.\relax }}{7}
\contentsline {figure}{\numberline {6}{\ignorespaces Screenshot of the tag-based search functionality when creating questionnaires. The right-hand side shows a preview of the questionnaire.\relax }}{8}
\contentsline {figure}{\numberline {B1}{\ignorespaces Yet Another Castle In Appendix\relax }}{13}
